export PATH=~/"bin:$PATH"
export PATH=~/"java/bin:$PATH"
export PATH=~/".local/bin:$PATH"
export GIT_EDITOR="vim"
export EDITOR="vim"

export JUNIT_HOME=~/"java/junit4.9"
export CLASSPATH="$CLASSPATH:$JUNIT_HOME/junit-4.9.jar"

export CC=colorgcc
export CFLAGS="-pipe"
export MAKEFLAGS="-j2"

export GREP_OPTIONS="--color=auto"

alias :q='exit'
alias :edit='vim'
alias :tabe='vim'

alias xterm='/usr/bin/xterm -fa Monaco -fs 14 -fullscreen'

export Gdc=15

alias Ga="git add"
alias Gap="git add -p"
alias Gb="git branch"
alias Gbr="git branch -r"
alias Gcv="git commit --verbose"
alias Gcav="git commit --amend --verbose"
alias Gco="git checkout"
alias Gd="git diff -U\$Gdc"
alias Gdc="git diff --cached -U\$Gdc"
alias Gfo="git fetch origin"
alias Gld="git log --decorate"
alias Gldg="git log --decorate --graph"
alias Glo="git log --format=oneline"
alias Gldgo="git log --decorate --graph --format=oneline"
alias Gldgp="git log --decorate --graph --patch-with-stat --unified=\$Gdc"
alias Glp="git log --patch-with-stat --unified=$Gdc"
alias Gploc="git pull origin \"\`git rev-parse --abbrev-ref HEAD\`\""
alias Gpsoc="git push origin \"\`git rev-parse --abbrev-ref HEAD\`\""
alias Gpsfoc="git push -f origin \"\`git rev-parse --abbrev-ref HEAD\`\""
alias Gri="git rebase --interactive"
alias Gsh="git show -U$Gdc"
alias Gst="git status"
alias Gsth="git stash"

set_title()
{
    echo -en "\033k$@\033\\"
}

gitklog()
{
    local diff="--color" # ugly hack for no-op

    if [[ "$1" == "-p" ]]
    then
        diff="--unified=$Gdc"
    fi

    git log \
        --format=" %Cgreen%h %Cblue%ci %Cred%an%Creset - %s %Cred%d%Creset" \
        --graph \
        --color \
        "$diff" \
        "$@" \
        | sed 's/[012][0-9]:[0-5][0-9]:[0-5][0-9] [^ ][0-9][0-9][0-9][0-9] //' \
        | less -R
}

vimgitgrep()
{
    vim -p `git grep "$@" | cut -d: -f1 | sort | uniq`
}

scp()
{
    if [[ "$#" -lt 2 || "$@" =~ : ]]
    then
        /usr/bin/scp $@
        return $?
    else
        sl
        echo "You forgot the colon dumbass!" >&2
        return 1
    fi
}

ssh()
{
    set_title "ssh $@"
    /usr/bin/ssh "$@"
}

gti()
{
    sl
    git $@
    return $?
}

composer()
{
    php ~/dev-tools/php/composer/composer.phar "$@"
    return $?
}

LIGHTRED='\[\033[1;31m\]'
LIGHTGREEN='\[\033[1;32m\]'
YELLOW='\[\033[1;33m\]'
LIGHTBLUE='\[\033[1;34m\]'
LIGHTPURPLE='\[\033[1;35m\]'
LIGHTCYAN='\[\033[1;36m\]'
WHITE='\[\033[1;37m\]'
NOCOLOR='\[\033[0m\]'

# Prompt
# ------

# Start with a newline as some commands don't end their output with one
PS1="\n$WHITE-("

# Integration with my .vimrc that exports a variable for shells started from vim
PS1="$PS1 \${PROMPT_EXTRA}"

# username@hostname[hh:mm:ss]
PS1="$PS1 \u@$LIGHTCYAN\h$WHITE[\t]"

# Exit code of the latest command: green "<0>" or red ">NON-ZERO<"
PS1="$PS1 \$(__x=\$?; if [[ \$__x -ne 0 ]]; then"
PS1="$PS1 echo -n \"$LIGHTRED>\$__x<\";"
PS1="$PS1 else echo -n \"$LIGHTGREEN<\$__x>\"; fi)"

# Display battery info if available
PS1="$PS1$LIGHTCYAN\$(acpi -b 2>/dev/null |"
PS1="$PS1 sed -r 's/^.*(: ([a-z])[a-z]*, ([0-9]*%)).*\$/ [\\2\\3]/i' |"
PS1="$PS1 grep --color=never -m1 '^ \\\\[.*\\\\]\$')"

# Last max 30 characters of current working directory with a less-than sign
# when truncated
PS1="$PS1 $LIGHTPURPLE"
PS1="$PS1\$(echo '\w' | sed -r 's/^.*.(.{30})/<\1/')"

# When inside a git repo, display the name of the current working branch
# along with some statistics about uncommitted changes
PS1="$PS1\$( git branch 2>/dev/null | grep -m1 --color=never '^[*] '"
PS1="$PS1 | sed 's/^[*] /$WHITE )-\\\\n-($LIGHTBLUE /"
PS1="$PS1 ; s/\\([^-]\\)\$/\\1 $LIGHTGREEN'\$(git status --porcelain"
PS1="$PS1 2>/dev/null | wc -l)'/ ; s/ master /$LIGHTRED master /')"

# Update window title with the last 2 segments of pwd
PS1="$PS1\\[\\033k\$(echo \$(basename \$(dirname \$(pwd)))/"
PS1="$PS1\$(basename \$(pwd)) | sed s@//*@/@g)\\033\\\\\\]"

# New command to be entered in a new line
PS1="$PS1 $WHITE)-\n\\\$ $NOCOLOR"

# Adjust the title of the terminal window
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\$PROMPT_EXTRA \u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac
